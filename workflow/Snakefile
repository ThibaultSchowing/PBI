# Snakefile for the PhageScope data download and processing pipeline
# This Snakefile orchestrates the downloading, merging, and reporting of various phage-related metadata
# and protein fasta files from PhageScope (for now). 
# Each merging is unique and is handled by a dedicated script.


configfile: "../config/config.yaml"



import os


# List here the features for which reports will be generated.
# These features correspond to the keys in the config file that contain URLs for metadata.
# Note: the name are directly used, so they must match the keys names (read the rule download_all_tsvs)
# Note: The URL returning errors have been commented out in the config file. 

FEATURES = [
    "phage_metadata", 
    "annotated_proteins_metadata", 
    "transcription_terminator_metadata",
    "phage_trna_tmrna_metadata", 
    "phage_anti_crispr_metadata", 
    "phage_virulent_factor_metadata", 
    "phage_transmembrane_protein_metadata"
]

# For the fasta files, the snakemake rules simply check that the directories are created but cannot check 
# the content of the directories, as files are too numerous and not named in a predictable way.

# Récupération des paramètres de config
protein_fasta_urls = config["protein_fasta_urls"]
compressed_dir = config["protein_fasta_compressed_output"]
output_protein_fasta_dir = config["protein_fasta_output"]


# Génération de la liste des dossiers extraits attendus pour les fichiers fasta (protéines)
extracted_dirs_prot = [
    os.path.join(output_protein_fasta_dir, name)
    for name in protein_fasta_urls.keys()
]

# Récupération des paramètres de config pour les fichiers fasta de phages
phage_fasta_urls = config["phage_fasta_urls"]
compressed_phage_dir = config["phage_fasta_compressed_output"]
output_phage_fasta_dir = config["phage_fasta_output"]

# Génération de la liste des dossiers extraits attendus pour les fichiers fasta de phages
extracted_dirs_phages = [
    os.path.join(output_phage_fasta_dir, name)
    for name in phage_fasta_urls.keys()
]


# ----------------------------------------
# RULE ALL (tous les rapports)
# Demander de générer les csv merged est redondant
# ----------------------------------------

rule all:
    input:
        expand(
            "reports/{feature}_report.html",
            feature=FEATURES
        ),
        expand(
            "../data/protein_fasta_merged/{dataset}.fasta",
            dataset=list(protein_fasta_urls.keys())
        ),
        expand("../data/phage_fasta_merged/{dataset}.fasta",
            dataset=list(phage_fasta_urls.keys())
        )


# if launched with auto discovery of snakefile (from the root directory),no need to specify the workflow directory
# Since rules have been moved to a subdirectory, we needed to add "../"to all the paths  
include: "rules/phagescope.smk"


